<Window x:Class="MediaMVP.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dock="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:ax="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:MediaMVP"
        mc:Ignorable="d"
        Title="MediaMVP" Height="500" Width="800" KeyDown="Window_KeyDown" MouseMove="Window_MouseMove">
    <Window.Resources>
        <!--<local:MediaLoader x:Key="Data"/>-->
        <local:IsPlaylistConverter x:Key="PlayConv"/>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#33DADADA"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#00000000"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#00000000"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#00000000"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#FFDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#00000000"/>
        <Style x:Key="ListViewItemStyle1" TargetType="{x:Type ListViewItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="IsSelected" Value="{Binding Selected, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="ActivateExt"/>
        </Style>
    </Window.Resources>
    <!--Steht auch im Code Behind. Hier nur, weils angenehmer ist-
    <Window.DataContext>
        <local:MediaLoader/>
    </Window.DataContext>-->

    <Grid>
        <!-- Groesseneinstellungen -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- Menubar -->
        <DockPanel>
            <Menu Name="Menu" DockPanel.Dock="Top">
                <Menu.Style>
                    <Style>
                        <Setter Property="MenuItem.FontSize" Value="14"/>
                        <Setter Property="MenuItem.FontFamily" Value="Calibri"/>
                    </Style>
                </Menu.Style>
                <MenuItem Header="_File">
                    <MenuItem Header="_Open"/>
                    <MenuItem Header="_Close" Click="MenuItem_Close"/>
                    <MenuItem Header="_Save"/>
                </MenuItem>
                <MenuItem Header="Settings">
                    <MenuItem Header="Set Default Path" Click="OpenDirectoryDialog"></MenuItem>
                </MenuItem>
                <MenuItem Header="_Test">
                    <MenuItem Header="_Wow"/>
                </MenuItem>
            </Menu>
        </DockPanel>

        <!-- Main Content -->
        <dock:DockingManager Name="dockingManager" Grid.Row="1" Margin="5,2,5,2">
            <dock:LayoutRoot>
                <dock:LayoutPanel>

                    <!-- Playlist links-->
                    <dock:LayoutAnchorablePaneGroup Orientation="Vertical"
                                                    DockWidth="0.6*" >
                        <dock:LayoutAnchorablePane DockHeight="0.2*">
                            <dock:LayoutAnchorable Title="Source"
                                                   x:Name="Source"
                                                   CanHide="False"
                                                   CanClose="False">
                                <ComboBox SelectionChanged="Sources_SelectionChanged" SelectedIndex="0" Name="Sources" ItemsSource="{Binding Sources}" SelectedValuePath="Value" SelectedValue="{Binding Media, Mode=OneWayToSource}" DisplayMemberPath="Key"
                                    Height="20"/>
                            </dock:LayoutAnchorable>
                        </dock:LayoutAnchorablePane>
                        <dock:LayoutAnchorablePane DockHeight="0.2*">
                            <dock:LayoutAnchorable Title="Manage Playlists"
                                                   x:Name="Manage"
                                                   CanHide="False"
                                                   CanClose="False">
                                <StackPanel Orientation="Horizontal" local:MarginSetter.Margin="2">
                                    <Button Click="AddPlaylist">Add New</Button>
                                    <Button Click="EditPlaylist" Name="EditP" IsEnabled="{Binding ElementName=Sources, Path=SelectedItem, Converter={StaticResource PlayConv}}">Edit</Button>
                                    <Button Click="RemovePlaylist" Name="RemoveP" IsEnabled="{Binding ElementName=EditP,Path=IsEnabled}">Remove</Button>
                                </StackPanel>
                            </dock:LayoutAnchorable>
                        </dock:LayoutAnchorablePane>
                        <dock:LayoutAnchorablePane>
                            <dock:LayoutAnchorable Title="Filter Extensions"
                                                   x:Name="Filter"
                                                   CanHide="False"
                                                   CanClose="False">
                                <ListView Name="Extensions" ItemsSource="{Binding UsedExtensions}" SelectionMode="Multiple" ItemContainerStyle="{DynamicResource ListViewItemStyle1}">
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <CheckBox IsEnabled="False" IsChecked="{Binding Selected}"></CheckBox>
                                                <TextBlock Text="{Binding Name}" Width="110"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                    <ListView.Resources>
                                        <Style TargetType="ListViewItem">


                                            <!--     <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="DarkGray"></Setter>
                                                </Trigger>
                                                <DataTrigger Binding="{Binding Path=IsSelected}" Value="False">
                                                    <Setter Property="Background" Value="Green"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>!-->
                                        </Style>
                                    </ListView.Resources>
                                </ListView>
                            </dock:LayoutAnchorable>
                        </dock:LayoutAnchorablePane>
                    </dock:LayoutAnchorablePaneGroup>
                    <dock:LayoutAnchorablePaneGroup>
                        <dock:LayoutAnchorablePane DockWidth="1*">
                            <dock:LayoutAnchorable Title="Media"
                                                   x:Name="Media"
                                                   CanClose="False">
                                <ListBox Name="Medias" SelectedItem="{Binding CMedia}" ItemsSource="{Binding Media}" SelectionChanged="Medias_SelectionChanged">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Label Content="{Binding MName}"></Label>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </dock:LayoutAnchorable>
                        </dock:LayoutAnchorablePane>
                    </dock:LayoutAnchorablePaneGroup>

                    <dock:LayoutAnchorablePaneGroup Orientation="Vertical">
                        <!-- Mediaplayer in der Mitte -->
                        <dock:LayoutAnchorablePane DockHeight="6*" CanRepositionItems="True">
                            <dock:LayoutAnchorable Title="Mediaplayer"
                                                   x:Name="Mediaplayer">
                                <Canvas Name="canvas">
                                    <MediaElement Source="{Binding CMedia.MPath}"                                 
                                              Stretch="Fill"
                                              Name="Player"
                                                      Width="{Binding ElementName=canvas, Path=Width}"
                                                      Height="{Binding ElementName=canvas, Path=Height}"
                                              LoadedBehavior="Manual"
                                              UnloadedBehavior="Stop"
                                              Volume="{Binding ElementName=VolumeSlider, Path=Value}"
                                              MediaOpened="Element_MediaOpened" MediaEnded="Element_MediaEnded"/>

                                    <StackPanel Canvas.Bottom="0" Width="{Binding ActualWidth, ElementName=canvas, Mode=OneWay}">
                                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" x:Name="wrapPanel" local:MarginSetter.Margin="2">
                                            <Button Height="20" Name="PastMedia" Content="/"/>
                                            <!--Click="OnMouseDownPlayPastMedia"/>-->
                                            <Button Height="20" Name="PauseMedia" Content="=" Click="OnMouseDownPlayMedia"/>
                                            <Button Height="20" Name="NextMedia" Content="\"/> 
                                            <!--Click="OnMouseDownPlayNextMedia"/>-->
                                            <Slider Width="100" Name="TimelineSlider" Thumb.DragStarted="DragStarted" Thumb.DragCompleted="DragCompleted"/>
                                            <Label Name="PlayTime"></Label>
                                            <!--<StackPanel Orientation="Horizontal" x:Name="wrapPanel" local:MarginSetter.Margin="2">
                                    <Button Content=">" Click="OnMouseDownPlayMedia"/>
                                    <Slider Width="100" Name="TimelineSlider" Thumb.DragStarted="DragStarted" Thumb.DragCompleted="DragCompleted"/>
                                    <Label Name="PlayTime"></Label>
                                </StackPanel>-->
                                        </StackPanel>
                                    </StackPanel>
                                </Canvas>
                            </dock:LayoutAnchorable>


                        </dock:LayoutAnchorablePane>
                    </dock:LayoutAnchorablePaneGroup>


                </dock:LayoutPanel>
            </dock:LayoutRoot>
        </dock:DockingManager>
    </Grid>
</Window>
